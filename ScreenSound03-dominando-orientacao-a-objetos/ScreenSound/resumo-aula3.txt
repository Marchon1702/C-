Heranças de classes

Uma classe pode ser filha de outra, isso faz com que ela possa utilizar os atributos, propriedades ou métodos de seu pai, esse conceito se chama herança.

Ex: 
	internal class Roupa 
	{
		public virtual void MudaRoupa(Roupa roupa) 
		{
			Console.WriteLine("Bem Vindo ao MudaRoupa")
		}
	}

	internal class Blusa : Roupa
	{
		public override MudaRoupa() 
		{
			base.MudaRoupa(roupa)
			Console.WriteLine("Roupa mudada, agora você está usando uma blusa azul!")
		}
	}

No Exemplo acima Roupa é Pai de Blusa, uma váriavel pai pode ser criada quando ele representa uma abrangencia maior em relação sua filha, Blusa é um tipo de Roupa, então Roupa pode ser pai de filha.

Criando um método que pode ser sobrescrito

Imagine que temos um método que pode receber uma lógica diferente a depender da sua classe filha, para isso podemos criar um método com uma lógica geral, e adaptar o resto da logica em cada um de seus filhos, para isso, no metodo a ser sobrescito devemos usar uma palavra reservada chamada de "virtual" e no método dentro do filho que irá sobreescreve-lo devemos usar a palavra "override", usar a lógica do método pai é opcional, caso queira basta declarar base.MudaRoupa(roupa);

Regras para sobreescrever um método: Sua assinatura deve ser a mesma, ou seja, método deve ser declarado com o mesmo nome, e receber os mesmos parâmetros mesmo que nem todos usem ele.


